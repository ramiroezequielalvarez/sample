SELECT 
    emc.id AS ExternalManagerConfigId,
    COUNT(em.id) AS ExternalManagersCount
FROM externalmgr."ExternalManagerConfigs" emc
LEFT JOIN externalmgr."ExternalManagers" em 
    ON em."ExternalManagerConfigId" = emc."id"
GROUP BY emc.id
ORDER BY ExternalManagersCount DESC;

SELECT 
    emc.id AS ExternalManagerConfigId,
    STRING_AGG(em.id::TEXT, ', ') AS ExternalManagerIds
FROM externalmgr."ExternalManagerConfigs" emc
LEFT JOIN externalmgr."ExternalManagers" em 
    ON em."ExternalManagerConfigId" = emc."id"
GROUP BY emc.id
ORDER BY emc.id;



SELECT 
    emc.id AS ExternalManagerConfigId,
    COUNT(emcs.id) AS ClientSolutionsCount
FROM externalmgr."ExternalManagerConfigs" emc
LEFT JOIN externalmgr."ExternalManagerClientSolutions" emcs 
    ON emcs."ExternalManagerConfigId" = emc."id"
GROUP BY emc.id
ORDER BY ClientSolutionsCount DESC;


SELECT 
    emc.id AS ExternalManagerConfigId,
    STRING_AGG(emcs."ClientSolutionId"::TEXT, ', ') AS ClientSolutionGroups
FROM externalmgr."ExternalManagerConfigs" emc
LEFT JOIN externalmgr."ExternalManagerClientSolutions" emcs 
    ON emcs."ExternalManagerConfigId" = emc."id"
GROUP BY emc.id
ORDER BY emc.id;


Send the entire payload and the array of EMClientSolutionsAssociations in the "ExternalManagerConfiguration" message.

Once BMK and ALPHA consume the "ExternalManagerConfiguration" message, perform an internal publish by iterating over the array of EMClientSolutionsAssociations so that the "ExternalManagerClientSolution" message is self-consumed.

And the same for Cashflows. The goal is that always EMClientSolutionsAssociations proceeds before ExternalManagerClientSolution
